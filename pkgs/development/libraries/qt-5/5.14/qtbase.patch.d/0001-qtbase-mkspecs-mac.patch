diff --git a/mkspecs/common/mac.conf b/mkspecs/common/mac.conf
index 61bea952b2..9909dae726 100644
--- a/mkspecs/common/mac.conf
+++ b/mkspecs/common/mac.conf
@@ -23,7 +23,7 @@ QMAKE_INCDIR_OPENGL     = \
 
 QMAKE_FIX_RPATH         = install_name_tool -id
 
-QMAKE_LFLAGS_RPATH      = -Wl,-rpath,
+QMAKE_LFLAGS_RPATH      =
 QMAKE_LFLAGS_GCSECTIONS = -Wl,-dead_strip
 
 QMAKE_LFLAGS_REL_RPATH  =
diff --git a/mkspecs/features/mac/default_pre.prf b/mkspecs/features/mac/default_pre.prf
index e3534561a5..480014ab24 100644
--- a/mkspecs/features/mac/default_pre.prf
+++ b/mkspecs/features/mac/default_pre.prf
@@ -3,7 +3,7 @@ load(default_pre)
 
 isEmpty(QMAKE_XCODE_DEVELOPER_PATH) {
     # Get path of Xcode's Developer directory
-    QMAKE_XCODE_DEVELOPER_PATH = $$system("/usr/bin/xcode-select --print-path 2>/dev/null")
+    QMAKE_XCODE_DEVELOPER_PATH = $$system("xcode-select --print-path 2>/dev/null")
     isEmpty(QMAKE_XCODE_DEVELOPER_PATH): \
         error("Xcode path is not set. Please use xcode-select to choose Xcode installation path.")
 
@@ -13,16 +13,16 @@ isEmpty(QMAKE_XCODE_DEVELOPER_PATH) {
 }
 
 isEmpty(QMAKE_XCODEBUILD_PATH): \
-    QMAKE_XCODEBUILD_PATH = $$system("/usr/bin/xcrun -find xcodebuild 2>/dev/null")
+    QMAKE_XCODEBUILD_PATH = $$system("xcrun -find xcodebuild 2>/dev/null")
 
 !isEmpty(QMAKE_XCODEBUILD_PATH) {
     # Make sure Xcode is set up properly
-    !system("/usr/bin/xcrun xcodebuild -license check 2>/dev/null"): \
+    !system("xcrun xcodebuild -license check 2>/dev/null"): \
         error("Xcode not set up properly. You need to confirm the license agreement by running 'sudo xcrun xcodebuild -license accept'.")
 
     isEmpty(QMAKE_XCODE_VERSION) {
         # Extract Xcode version using xcodebuild
-        xcode_version = $$system("/usr/bin/xcrun xcodebuild -version")
+        xcode_version = $$system("xcrun xcodebuild -version")
         QMAKE_XCODE_VERSION = $$member(xcode_version, 1)
         isEmpty(QMAKE_XCODE_VERSION): error("Could not resolve Xcode version.")
         unset(xcode_version)
@@ -32,7 +32,7 @@ isEmpty(QMAKE_XCODEBUILD_PATH): \
 isEmpty(QMAKE_TARGET_BUNDLE_PREFIX) {
     QMAKE_XCODE_PREFERENCES_FILE = $$(HOME)/Library/Preferences/com.apple.dt.Xcode.plist
     exists($$QMAKE_XCODE_PREFERENCES_FILE): \
-        QMAKE_TARGET_BUNDLE_PREFIX = $$system("/usr/libexec/PlistBuddy -c 'print IDETemplateOptions:bundleIdentifierPrefix' $$QMAKE_XCODE_PREFERENCES_FILE 2>/dev/null")
+        QMAKE_TARGET_BUNDLE_PREFIX = $$system("PlistBuddy -c 'print IDETemplateOptions:bundleIdentifierPrefix' $$QMAKE_XCODE_PREFERENCES_FILE 2>/dev/null")
 
     !isEmpty(_QMAKE_CACHE_):!isEmpty(QMAKE_TARGET_BUNDLE_PREFIX): \
         cache(QMAKE_TARGET_BUNDLE_PREFIX)
diff --git a/mkspecs/features/mac/sdk.mk b/mkspecs/features/mac/sdk.mk
index c40f58c987..349a0e58f2 100644
--- a/mkspecs/features/mac/sdk.mk
+++ b/mkspecs/features/mac/sdk.mk
@@ -1,6 +1,6 @@
 
 ifeq ($(QT_MAC_SDK_NO_VERSION_CHECK),)
-    CHECK_SDK_COMMAND = /usr/bin/xcrun --sdk $(EXPORT_QMAKE_MAC_SDK) -show-sdk-version 2>&1
+    CHECK_SDK_COMMAND = xcrun --sdk $(EXPORT_QMAKE_MAC_SDK) -show-sdk-version 2>&1
     CURRENT_MAC_SDK_VERSION := $(shell DEVELOPER_DIR=$(EXPORT_QMAKE_XCODE_DEVELOPER_PATH) $(CHECK_SDK_COMMAND))
     ifneq ($(CURRENT_MAC_SDK_VERSION),$(EXPORT_QMAKE_MAC_SDK_VERSION))
         # We don't want to complain about out of date SDK unless the target needs to be remade.
diff --git a/mkspecs/features/mac/sdk.prf b/mkspecs/features/mac/sdk.prf
index 3a9c2778bb..bb5d317b88 100644
--- a/mkspecs/features/mac/sdk.prf
+++ b/mkspecs/features/mac/sdk.prf
@@ -18,7 +18,7 @@ defineReplace(xcodeSDKInfo) {
         sdk = $$QMAKE_MAC_SDK
 
     isEmpty(QMAKE_MAC_SDK.$${sdk}.$${info}) {
-        QMAKE_MAC_SDK.$${sdk}.$${info} = $$system("/usr/bin/xcrun --sdk $$sdk $$infoarg 2>/dev/null")
+        QMAKE_MAC_SDK.$${sdk}.$${info} = $$system("xcrun --sdk $$sdk $$infoarg 2>/dev/null")
         # --show-sdk-platform-path won't work for Command Line Tools; this is fine
         # only used by the XCTest backend to testlib
         isEmpty(QMAKE_MAC_SDK.$${sdk}.$${info}):if(!isEmpty(QMAKE_XCODEBUILD_PATH)|!equals(infoarg, "--show-sdk-platform-path")): \
@@ -33,12 +33,18 @@ QMAKE_MAC_SDK_PATH = $$xcodeSDKInfo(Path)
 QMAKE_MAC_SDK_PLATFORM_PATH = $$xcodeSDKInfo(PlatformPath)
 QMAKE_MAC_SDK_VERSION = $$xcodeSDKInfo(SDKVersion)
 
-isEmpty(QMAKE_EXPORT_INCDIR_OPENGL) {
-    QMAKE_EXPORT_INCDIR_OPENGL = $$QMAKE_INCDIR_OPENGL
-    sysrootified =
-    for(val, QMAKE_INCDIR_OPENGL): sysrootified += $${QMAKE_MAC_SDK_PATH}$$val
-    QMAKE_INCDIR_OPENGL = $$sysrootified
-}
+# Prevent build script from tying to rebase absolute Nix store paths onto the
+# sysroot path, which would otherwise lead to errors like:
+#
+# > Include path /nix/store/z8z04p0ph48w22rqzx7ql67gy8cyvidi-SDKs/MacOSX10.12.sdk/nix/store/j8agw10b0ii0wslr8xc8qh9xxwxca8yw-apple-framework-OpenGL/Library/Frameworks/OpenGL.framework/Headers is invalid.
+# > Include path /nix/store/z8z04p0ph48w22rqzx7ql67gy8cyvidi-SDKs/MacOSX10.12.sdk/nix/store/2cma888z222yvyk1vvcqm489sd46nk8i-apple-framework-AGL/Library/Frameworks/AGL.framework/Headers/ is invalid.
+#
+# isEmpty(QMAKE_EXPORT_INCDIR_OPENGL) {
+#     QMAKE_EXPORT_INCDIR_OPENGL = $$QMAKE_INCDIR_OPENGL
+#     sysrootified =
+#     for(val, QMAKE_INCDIR_OPENGL): sysrootified += $${QMAKE_MAC_SDK_PATH}$$val
+#     QMAKE_INCDIR_OPENGL = $$sysrootified
+# }
 
 QMAKESPEC_NAME = $$basename(QMAKESPEC)
 
@@ -53,7 +59,7 @@ for(tool, $$list(QMAKE_CC QMAKE_CXX QMAKE_FIX_RPATH QMAKE_AR QMAKE_RANLIB QMAKE_
     value = $$eval($$tool)
     isEmpty(value): next()
 
-    sysrooted = $$system("/usr/bin/xcrun -sdk $$QMAKE_MAC_SDK -find $$first(value) 2>/dev/null")
+    sysrooted = $$system("xcrun -sdk $$QMAKE_MAC_SDK -find $$first(value) 2>/dev/null")
     isEmpty(sysrooted): next()
 
     $$tool = $$sysrooted $$member(value, 1, -1)
